runcode(function()
	local Disabler = {["Enabled"] = false}
	Disabler = GuiLibrary["ObjectsThatCanBeSaved"]["UtilityWindow"]["Api"].CreateOptionsButton({
		["Name"] = "AnticheatDisabler",
		["Function"] = function(callback)
			if callback then
				if WhitelistFunctions:IsSpecialIngame() then 
					createwarning("Disabler", "no", 10)
					Disabler["ToggleButton"](false)
					return
				end
				if (matchState == 0 or lplr.Character:FindFirstChildWhichIsA("ForceField")) then
					task.spawn(function()
						entity.character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Dead, true)
						entity.character.Humanoid:ChangeState(Enum.HumanoidStateType.Dead)
						repeat task.wait() until entity.character.Humanoid.MoveDirection ~= Vector3.zero
						task.wait(0.2)
						entity.character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Dead, false)
						entity.character.Humanoid:ChangeState(Enum.HumanoidStateType.Running)
						workspace.Gravity = 192.6
						createwarning("AnticheatDisabler", "Disabled Anticheat!", 10)
					end)
				else
					local warning = createwarning("AnticheatDisabler", "Failed to disable\ndo it on respawn bubble or spawnbox", 10)
					pcall(function()
						warning:GetChildren()[5].Position = UDim2.new(0, 46, 0, 38)
					end)
				end
				Disabler["ToggleButton"](false)
			end
		end
	})
end)

runcode(function()
	local trollage
	local remote = bedwars["ClientHandler"]:Get(bedwars["PickupRemote"])
	local ServerCrasher = {["Enabled"] = false}
	ServerCrasher = GuiLibrary["ObjectsThatCanBeSaved"]["UtilityWindow"]["Api"].CreateOptionsButton({
		["Name"] = "LagbackAllLoop",
		["Function"] = function(callback)
			if callback then
				if WhitelistFunctions:IsSpecialIngame() then 
					createwarning("LagbackAllLoop", "no", 10)
					ServerCrasher["ToggleButton"](false)
					return
				end
				task.spawn(function()
					if not trollage then 
						trollage = {}
						local lasttbl
						for i = 1,150000 do
							trollage[#trollage+1] = (lasttbl or {})
							lasttbl = trollage[#trollage]
						end
					end
					repeat
						task.wait(0.3)
						task.spawn(function() 
							pcall(function() remote:CallServer(trollage) end)
						end)
					until (not ServerCrasher["Enabled"])
				end)
			end
		end
	})
	local ServerCrasher2 = {["Enabled"] = false}
	ServerCrasher2 = GuiLibrary["ObjectsThatCanBeSaved"]["UtilityWindow"]["Api"].CreateOptionsButton({
		["Name"] = "LagbackAll",
		["Function"] = function(callback)
			if callback then
				if WhitelistFunctions:IsSpecialIngame() then 
					createwarning("LagbackAllLoop", "no", 10)
					ServerCrasher2["ToggleButton"](false)
					return
				end
				task.spawn(function()
					if not trollage then 
						trollage = {}
						local lasttbl
						for i = 1,150000 do
							trollage[#trollage+1] = (lasttbl or {})
							lasttbl = trollage[#trollage]
						end
					end
					for i = 1, 15 do 
						task.wait(0.3)
						task.spawn(function() 
							pcall(function() remote:CallServer(trollage) end)
						end)
					end
				end)
				ServerCrasher2["ToggleButton"](false)
			end
		end
	})
end)



repeat task.wait() until game:IsLoaded()
task.wait(5)
if not shared.GuiLibrary then
loadstring(game:HttpGet("https://raw.githubusercontent.com/7GrandDadPGN/VapeV4ForRoblox/main/NewMainScript.lua"))()
end;


local XPGRind = true

local LibLoader = loadstring(game:HttpGet('https://raw.githubusercontent.com/boatDeckRoblox/Libraries/main/LibLoader'))()

LibLoader:LoadLib('lPlayer')

if Connections then
    for i,v in pairs(Connections) do
        if typeof(v) == 'RBXScriptSignal' then
            v:Disconnect()
        end
    end
end
getgenv().Connections = {

}

getgenv = getgenv or function()
    return _G
end

local TP = GetService("TeleportService")


TP.TeleportInitFailed:Connect(function()
	task.wait()
	TP:Teleport(6872265039)
end)


getgenv().TweenSpeed = .97

function HasPick()
    for i,v in pairs(game:GetService("ReplicatedStorage").Inventories:GetChildren()) do
        if v.Name == game.Players.LocalPlayer.Name then
            for x,child in pairs(v:GetChildren()) do
                if child.Name:find("pickaxe") or child.Name == "wood_pickaxe" then
                    return true
                end
            end
        end
    end
    return false
end


getBed = function()
    local _2 = ''
        for i,v in pairs(workspace:GetChildren()) do
            if v.Name == 'bed' and v:FindFirstChild("Covers") and v.Covers.BrickColor == game.Players.LocalPlayer.TeamColor then
                _2 = v;
                break
            end
        end
        return _2
    end
print("Running!")
setfpscap(math.random(45,50))
--game:GetService("RunService"):Set3dRenderingEnabled(false)


repeat task.wait(.1) until lPlayer

lPlayer.bed = getBed();

function KillSelf()


if lPlayer.isAlive() then
    local hum = lPlayer.Character.Humanoid
hum.Health = 0
game:GetService("VirtualInputManager"):SendKeyEvent(true, "W", false, game)
task.wait(.5)
game:GetService("VirtualInputManager"):SendKeyEvent(false, "W", false, game)
end
end

if not workspace:FindFirstChild("Map") then return end
repeat task.wait() until HasPick() 
lPlayer:TP2POS(Vector3.new(9000,302060,3000))
task.wait(.1)
lPlayer:TP2POS(Vector3.new(9000,302060,3000))
function GetMagnitude(block1, block2)
    if block1 and block2 then
        local pos1 = block1.Position
        local pos2 = block2.Position
        return (pos2 - pos1).Magnitude
    end
end

local function isPlayerNearby(radius)
    radius = radius or 18
    -- Get the position of the local player
    local localPlayerPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

    -- Initialize variables to track the closest player and its distance
    local closestPlayer = nil
    local closestDistance = math.huge -- Start with a very large value

    -- Loop through all the players in the game
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer and player.Team ~= lPlayer.Team and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerPosition = player.Character.HumanoidRootPart.Position
            local distance = (playerPosition - localPlayerPosition).magnitude

            if distance <= radius and distance < closestDistance then
                closestPlayer = player
                closestDistance = distance
            end
        end
    end

    return closestPlayer
end

local TweenService = GetService("ts")
local ReplicatedStorage = GetService("rs")

function CountBeds()
    local amt = 0;
    for i,v in pairs(workspace:GetChildren()) do
        if v.Name == 'bed' and v:FindFirstChild("Covers") then
            amt += 1
        end
    end
    return amt
end


local numBeds = 2;

spawn(function()
repeat task.wait(0.2)
numBeds = CountBeds()
until nil
end)

function GetClosestBed()
    local nearestBed = nil
    local minDistance = math.huge

    for _,v in pairs(game.Workspace:GetDescendants()) do
        if v.Name:lower() == "bed" and v:FindFirstChild("Covers") and v:FindFirstChild("Covers").BrickColor ~= lPlayer.TeamColor then
            local distance = (v.Position - lPlayer.Character.HumanoidRootPart.Position).magnitude
            if distance < minDistance then
                nearestBed = v
                minDistance = distance
            end
        end
    end

    return nearestBed
end


local function TargBed()
    local blacklistbedBeds = lPlayer.bed
    for i,v in pairs(workspace:GetChildren()) do
        if v.Name == 'bed' and v:FindFirstChild("Covers") and v ~= blacklistbedBeds then
            return v
        end
    end
end

function bedHasSheild()
    for i,v in pairs(workspace:GetChildren()) do
        if v.Name == 'BedShield' then
            return true
        end
    end
    return false
end
getgenv().killed = {}
function DoTween(where2, mode)
	task.wait(0.1)
    local tweenComp = false
    local tween
    if mode == 'bed' then
    tween = TweenService:Create(lPlayer.Character:FindFirstChild("HumanoidRootPart"), TweenInfo.new(TweenSpeed, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {-- Enum.EasingStyle.Linear, Enum.EasingDirection.Out
        CFrame = where2.CFrame * CFrame.new(0,5,0)
    });
else
    tween = TweenService:Create(lPlayer.Character:FindFirstChild("HumanoidRootPart"), TweenInfo.new(TweenSpeed, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
        CFrame = where2.CFrame * CFrame.new(0,0,-1)
    });
    --- -, Enum.EasingStyle.Linear, Enum.EasingDirection.Out
    end
    tween:Play();
    local normal = Enum.CameraType.Custom;
    local scriptable = Enum.CameraType.Scriptable
    local camera = workspace.CurrentCamera
    camera.CameraType = scriptable
    local leftRotation = CFrame.Angles(0, math.rad(-90), 0)
    local rotatedLeftCFrame = camera.CFrame * leftRotation

    -- Set the camera to the left rotated CFrame
    camera.CFrame = rotatedLeftCFrame

    local rightRotation = CFrame.Angles(0, math.rad(90), 0)
    local rotatedRightCFrame = rightRotation
    print("sad")
    camera.CameraType = normal
    tween.Completed:Wait(.1)
    tweenComp = true
    if mode == 'bed' then

        local oldPos = TargBed():FindFirstChild("Covers").CFrame
        
        if lPlayer.isAlive() and GetMagnitude(lPlayer.Character:FindFirstChild("HumanoidRootPart"), TargBed()) > 10 and tweenComp then -- if the tween lags u back or fails then we kill the player and retry
            KillSelf()
        end
        repeat
        task.wait()
        if lPlayer.isAlive() and lPlayer.Character and lPlayer.Character:FindFirstChild("HumanoidRootPart") and GetMagnitude(lPlayer.Character:FindFirstChild("HumanoidRootPart"), TargBed()) > 10 and tweenComp then -- if the tween lags u back or fails then we kill the player and retry
            KillSelf()
        end
        until where2 == nil or where2.Parent ~= game:GetService("Workspace") or where2.Parent == nil or not where2:FindFirstChild("Covers") or where2.Covers.CFrame ~= oldPos or not lPlayer.isAlive()

        if isPlayerNearby(20) then
            local plr = isPlayerNearby(20)
            print(plr.Name)
            local oldTeam = plr.Team
            local oldTeamColor = plr.TeamColor;
            local lol = TweenService:Create(lPlayer.Character:FindFirstChild("HumanoidRootPart"), TweenInfo.new(.16, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
                CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1)
            })
            lol:Play();
            lol.Completed:Wait()
            repeat task.wait()
            local thisTween
            thisTween = TweenService:Create(lPlayer.Character:FindFirstChild("HumanoidRootPart"), TweenInfo.new(.1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
                CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1)
            })
            thisTween:Play()
            thisTween.Completed:Wait()
            if GetMagnitude(lPlayer.Character:FindFirstChild("HumanoidRootPart"), plr.Character.HumanoidRootPart) > 30 then -- if the tween lags u back or fails then we kill the player and retry
                KillSelf()
            end
            thisTween = nil
            
            task.wait(.1)
            until plr.Team ~= oldTeam or plr.TeamColor ~= oldTeamColor or not lPlayer.isAlive(plr)
            table.insert(killed, plr.Name)
        end
        KillSelf()
    end
    tween = nil
end
--[[local mode = "2v2"
if bedHasSheild() then
mode = 'ranked'
end]]



repeat task.wait(0.2) until not bedHasSheild()
if XPGRind then
    task.wait(13)
end
--[[
function HasBeenTime(amt)
    amt = tonumber(amt)
    local lagbacked = false
    for i=1,7 do
        if not lagbacked then
            task.wait(1)
            lagbacked = isnetworkowner(lPlayer.Character.HumanoidRootPart)
        end
    end
    return lagbacked
end
]]

local function PlayerOnTeam(team)
    local players = game:GetService("Players"):GetPlayers()
    
    for _, player in ipairs(players) do
        if player.TeamColor == team then
            return true
        end
    end
    
    return false
end
task.wait(.1)
KillSelf()
print("Starting")




Connections.bedBreakFunc = lPlayer.CharacterAdded:Connect(function()

    DoTween(TargBed(), 'bed')
end)

repeat task.wait(0.2) until numBeds == 0 or numBeds == 1
Connections.bedBreakFunc:Disconnect();

print("Disconnected!")


Connections.Kill = lPlayer.CharacterAdded:Connect(function()
	task.wait()
	repeat task.wait() until lPlayer.isAlive()
    for i, v in pairs(game:GetService("Players"):GetPlayers()) do
        if not table.find(killed, v.Name) and v.Team ~= lPlayer.Team and lPlayer.isAlive() and lPlayer.isAlive(v) then
            if not lPlayer:GetRoot(v) then task.wait() until lPlayer:GetRoot(v) end
            DoTween(v.Character.HumanoidRootPart, "kill")
            local oldTeam = v.Team
            local oldTeamColor = v.TeamColor;
            repeat task.wait()
                local thisTween = nil;
                thisTween =  TweenService:Create(lPlayer.Character:FindFirstChild("HumanoidRootPart"), TweenInfo.new(.1,Enum.EasingStyle.Linear, Enum.EasingDirection.Out), { -- Enum.EasingStyle.Linear, Enum.EasingDirection.Out
                    CFrame = v.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,1)
                })
                thisTween:Play()
                thisTween.Completed:Wait()
                task.wait(.1)
                if GetMagnitude(lPlayer.Character:FindFirstChild("HumanoidRootPart"), v.Character.HumanoidRootPart) > 30 then -- if the tween lags u back or fails then we kill the player and retry
                    KillSelf()
                end
            until v == nil or v.Team ~= oldTeam or v.TeamColor ~= oldTeamColor or not lPlayer.isAlive(v) or not lPlayer.isAlive()
	        if lPlayer.isAlive() then
                    table.insert(killed, v.Name);
                    print(lPlayer.isAlive())
                KillSelf()
            end
            return
        end
    end
end)

KillSelf()
print("YESSSSS")


repeat task.wait() until game:IsLoaded()
repeat task.wait() until shared.GuiLibrary
local uis = game:GetService("UserInputService")
local GuiLibrary = shared.GuiLibrary
local ScriptSettings = {}
local UIS = game:GetService("UserInputService")
local COB = function(tab, argstable) 
	return GuiLibrary["ObjectsThatCanBeSaved"][tab.."Window"]["Api"].CreateOptionsButton(argstable)
end
function securefunc(func)
	task.spawn(function()
		spawn(function()
			pcall(function()
				loadstring(
					func()
				)()
			end)
		end)
	end)
end
function warnnotify(title, content, duration)
	local frame = GuiLibrary["CreateNotification"](title or "Windows", content or "(No Content Given)", duration or 5, "assets/WarningNotification.png")
	frame.Frame.Frame.ImageColor3 = Color3.fromRGB(255, 64, 64)
end
function infonotify(title, content, duration)
	local frame = GuiLibrary["CreateNotification"](title or "Windows", content or "(No Content Given)", duration or 5, "assets/InfoNotification.png")
	frame.Frame.Frame.ImageColor3 = Color3.fromRGB(255, 64, 64)
end
function getstate()
	local ClientStoreHandler = require(game.Players.LocalPlayer.PlayerScripts.TS.ui.store).ClientStore
	return ClientStoreHandler:getState().Game.matchState
end
function iscustommatch()
	local ClientStoreHandler = require(game.Players.LocalPlayer.PlayerScripts.TS.ui.store).ClientStore
	return ClientStoreHandler:getState().Game.customMatch
end
function checklagback()
	local hrp = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
	return isnetworkowner(hrp)
end

GuiLibrary["MainGui"].ScaledGui.ClickGui.Version.Text = "Creeperware private | v2"
GuiLibrary["MainGui"].ScaledGui.ClickGui.MainWindow.TextLabel.Text = "Creeperware private v2"
GuiLibrary["MainGui"].ScaledGui.ClickGui.Version.Version.Text = "Creeperware Private V2"
GuiLibrary["MainGui"].ScaledGui.ClickGui.Version.Position = UDim2.new(1, -175 - 20, 1, -25)
infonotify("Creeperware private V2", "Loaded successfully!", 5)




local AutoWin = COB("World", {
	["Name"] = "Creeperware private AutoWin ",
	["Function"] = function(callback)
		if callback then
			pcall(function()
                game.Workspace.Gravity = 0
                for i,v in pairs(game.Players:GetPlayers()) do
                    if v.Team == game:GetService("Players").LocalPlayer.Team and v ~= game:GetService("Players").LocalPlayer then
                        v:Destroy()
                    end
                 end
local Players = game:GetService("Players")
getgenv().Autowin = true
while getgenv().Autowin do
   for _,v in pairs(Players:GetPlayers()) do
       if v.Character and v.Character:FindFirstChildOfClass("Humanoid") and v.Character.Humanoid.Health ~= 0 and v ~= Players.LocalPlayer then
           repeat
               Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame
               task.wait(0.2)
           until v.Character.Humanoid.Health <= 0
       end
   end
   task.wait()
end
			end)
		else
			pcall(function()
                getgenv().Autowin = false
                game.Workspace.Gravity = 196.2
				print("disabled autowin")
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "works only with disabler"
})

local CustomFly = COB("Blatant", {
	["Name"] = "CustomClimbFly",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.CustomFly = true
				while task.wait() do
					if not ScriptSettings.CustomFly == true then return end
					game:GetService("Workspace").Gravity = 0
					game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
					task.wait(0.04)
					game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Climbing)
					task.wait(0.01)
					game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Landed)
				end
			end)
		else
			pcall(function()
				ScriptSettings.CustomFly = false
				game:GetService("Workspace").Gravity = 196.2
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "Uses bypasses to fly lagbacks"
})

local lobbyball = COB("Utility", {
	["Name"] = "lobby ball",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.lobbyball = true
				while task.wait() do
					if not ScriptSettings.lobbyball == true then return end
					game:GetService("Workspace").Gravity = 0
					game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Dead)
				end
			end)
		else
			pcall(function()
				ScriptSettings.lobbyball = false
				game:GetService("Workspace").Gravity = 196.2
				game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Alive)
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "epic lobby bypass👌"
})
local cflyswim = COB("Blatant", {
	["Name"] = "CustomFlySwim",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.cflyswim = true
				while task.wait() do
					if not ScriptSettings.cflyswim == true then return end
					game:GetService("Workspace").Gravity = 0
					game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
					task.wait(0.04)
					game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Landed)
					task.wait(0.01)
					game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
				end
			end)
		else
			pcall(function()
				ScriptSettings.cflyswim = false
				game:GetService("Workspace").Gravity = 196.2
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "best custom fly"
})
local opCustomFly = COB("Blatant", {
	["Name"] = "opfly",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.CustomFly = true
				while task.wait() do
					if not ScriptSettings.CustomFly == true then return end
					game:GetService("Workspace").Gravity = 0
					game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
					task.wait(0.04)
					game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Climbing)
					task.wait(0.01)
					game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Landed)
					task.wait(0.01)
					game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
				end
			end)
		else
			pcall(function()
				ScriptSettings.CustomFly = false
				game:GetService("Workspace").Gravity = 196.2
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "fly but op"
})
local float = COB("Blatant", {
	["Name"] = "Float",
	["Function"] = function(callback)
		if callback then
			pcall(function()
			game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			wait(0.15)
				ScriptSettings.float = true
				while task.wait() do
					if not ScriptSettings.CustomFly == true then return end
					game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
				end
			end)
		else
			pcall(function()
				ScriptSettings.float = false
				game:GetService("Workspace").Gravity = 196.2
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "float/fly"
})
local KitExploit = COB("Utility", {
	["Name"] = "KitExploit",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.KitExploit = true
				local kits = {
					["Axolotl"] = require(game:GetService("ReplicatedStorage").TS.games.bedwars.kit.kits.axolotl["axolotl-kit"]).AxolotlKit,
					["Beast"] = require(game:GetService("ReplicatedStorage").TS.games.bedwars.kit.kits["beast"]["beast-util"]).BeastKit,
					["Dasher"] = require(game:GetService("ReplicatedStorage").TS.games.bedwars.kit.kits.dasher["dasher-kit"]).DasherKit,
					["Fisherman"] = require(game:GetService("ReplicatedStorage").TS.games.bedwars.kit.kits["fisherman"]["fisherman-util"]).FishermanUtil,
					["IceQueen"] = require(game:GetService("ReplicatedStorage").TS.games.bedwars.kit.kits["ice-queen"]["ice-queen-kit"]).IceQueenKit,
					["Santa"] = require(game:GetService("ReplicatedStorage").TS.games.bedwars.kit.kits.santa["santa-util"]).SantaUtil,
				}
				kits["Axolotl"]["SWIM_TO_CHARACTER_TIME"] = 0.0000000000001
				kits["Axolotl"]["ACTIVE_COOLDOWN"] = 0.0000000000001
				kits["Beast"]["WALK_SPEED_MULTIPLIER"] = 5
				kits["Beast"]["KNOCKBACK_MULTIPLIER"] = 5
				kits["Dasher"]["DASH_COOLDOWN"] = 0.0000000000001
				kits["Dasher"]["CHARGE_TIME"] = 0.0000000000001
				kits["Dasher"]["CHARGE_TIME_BEFORE_CHARGING_STATE"] = 0.0000000000001
				kits["Dasher"]["TOTAL_CHARGE_TIME"] = 0.0000000000001
				kits["Fisherman"]["minigameDuration"] = 60
				kits["Fisherman"]["markerSize"] = UDim2.fromScale(0.05, 1)
				kits["Fisherman"]["totalDecaySpeedSec"] = 2
				kits["Fisherman"]["startingMarkerIncrementSpeed"] = 0.2
				kits["Fisherman"]["holdMinimumMarkerIncrementSpeed"] = 0.1
				kits["Fisherman"]["markerIncrementAmount"] = 0.025
				kits["Fisherman"]["fishZoneSize"] = UDim2.fromScale(0,5, 1)
				kits["Fisherman"]["fishZoneSpeedMultiplier"] = 5
				kits["Fisherman"]["fishZoneMoveCooldown"] = 10
				kits["Fisherman"]["fillAmount"] = 0.1
				kits["Fisherman"]["drainAmount"] = 0.0001
				kits["IceQueen"]["DAMAGE_REQUIREMENT"] = 0.0000000000001
				kits["IceQueen"]["PASSIVE_STACK_COOLDOWN"] = 0.0000000000001
				kits["IceQueen"]["PROC_COOLDOWN"] = 0.0000000000001
				kits["IceQueen"]["BAR_COUNT"] = 4
				kits["IceQueen"]["BASE_PASSIVE_DAMAGE"] = 0.1
				kits["IceQueen"]["BASE_SPEED_MULTIPLIER"] = 99
				kits["IceQueen"]["BASE_SLOW_LENGHT"] = 0.0000000000001
				kits["IceQueen"]["ICE_SWORD_PASSIVE_DAMAGE"] = 0.1
				kits["IceQueen"]["ICE_SWORD_SLOW_LENGTH"] = 0.0000000000001
				kits["IceQueen"]["ICE_SWORD_STUN_DURATION"] = 99
				kits["IceQueen"]["PASSIVE_EXPIRATION_TIME"] = 99
				kits["Santa"]["BOMB_DROP_DELAY"] = 0.0000000000001
				kits["Santa"]["TOTAL_BOMBS"] = 99
				kits["Santa"]["DROP_HEIGHT"] = 150
				kits["Santa"]["DROP_DELAY"] = 0.0000000000001
			end)
		else
			pcall(function()
				ScriptSettings.KitExploit = false
				infonotify("ItemExploit", "Unable to revert changes", "5")
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "Exploits Axolotl, Beast, Dasher, Fisherman, IceQueen and Santa kit settings"
})
local ItemExploit = COB("Utility", {
	["Name"] = "ItemExploit",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.ItemExploit = true
				local SW = require(game:GetService("ReplicatedStorage").TS.games.bedwars.items.stopwatch["stopwatch-constants"]).StopwatchConstants
				local TB = require(game:GetService("ReplicatedStorage").TS.games.bedwars.items.twirlblade["twirlblade-util"]).TwirlbladeUtil
				local CS = require(game:GetService("ReplicatedStorage").TS.games.bedwars["charge-shield"]["charge-shield-util"]).ChargeShieldUtil
				local GH = require(game:GetService("ReplicatedStorage").TS["grappling-hook"]["grappling-hook-util"])
				local HM = require(game:GetService("ReplicatedStorage").TS.vehicle.helicopter["helicopter-missile"])
				SW["DURATION"] = 60
				SW["EFFECT_DURATION"] = 60
				TB["SPIN_DAMAGE"] = 100
				CS["CHARGE_SHIELD_COOLDOWN_SEC"] = 0.0000000000001
				CS["CHARGE_DURATION"] = 10
				CS["CHARGE_SPEED_MULTIPLIER"] = 5
				CS["MAX_HIT_DISTANCE"] = 50
				CS["MAX_HIT_ANGLE"] = 360
				CS["MAX_HIT_HEIGHT"] = 100
				CS["HIT_DAMAGE"] = 100
				CS["VERTICAL_KNOCKBACK"] = 5
				CS["HORIZONTAL_KNOCKBACK"] = 5
				GH["SPEED"] = 5000
				GH["FIRE_COOLDOWN"] = 0.0000000000001
				GH["HIT_PLAYER_COOLDOWN"] = 0.0000000000001
				GH["HIT_BLOCK_COOLDOWN"] = 0.0000000000001
				HM["MISSLE_FIRE_RATE"] = 0.0000000000001
			end)
		else
			pcall(function()
				ScriptSettings.ItemExploit = false
				infonotify("ItemExploit", "Unable to revert changes", "5")
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "Exploits like 5 item settings settings"
})
local InfJump = COB("Utility", {
	["Name"] = "InfJump",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.InfJump = true
				game:GetService("UserInputService").JumpRequest:connect(function()
					if not ScriptSettings.InfJump == true then return end
					if not ScriptSettings.InfJump_Alr then
					    game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
					    ScriptSettings.InfJump_Alr = true
					    task.wait(0.125)
					    ScriptSettings.InfJump_Alr = false
					else
					    task.wait()
					end
				end)
			end)
		else
			pcall(function()
				ScriptSettings.InfJump = false
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "Makes you can jump infinetly"
})
local MageAnimation = COB("Render", {
	["Name"] = "MageAnimation",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.MageAnimation = true
				local Animate = game:GetService("Players").LocalPlayer.Character.Animate
				Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=707742142"
				Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=707855907"
				Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=707897309"
				Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=707861613"
				Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=707853694"
				Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=707826056"
				Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=707829716"
			end)
		else
			pcall(function()
				ScriptSettings.MageAnimation = false
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "Makes you get mage animation (FE) for pvp"
})
local AnimDisabler = COB("Utility", {
	["Name"]  = "AnimDisabler",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.AnimDisabler = true
				game:GetService("Players").LocalPlayer.Character.Animate.Disabled = true
				while task.wait(1.5) do
					if not ScriptSettings.AnimDisabler == true then return end
					repeat task.wait() until game:GetService("Players").LocalPlayer.Character.Animate
					game:GetService("Players").LocalPlayer.Character.Animate.Disabled = true
				end
			end)
		else
			pcall(function()
				ScriptSettings.AnimDisabler = false
				game:GetService("Players").LocalPlayer.Character.Animate.Disabled = false
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "Disables your animation"
})
local CollectAllDrops = COB("Utility", {
	["Name"]  = "CollectAllDrops broken",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.CollectAllDrops = true
				while task.wait() do
					if not ScriptSettings.CollectAllDrops == true then return end
					for i,v in pairs(game:GetService("Workspace").ItemDrops:GetChildren()) do
						game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
						game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,2,0)
					end
				end
			end)
		else
			pcall(function()
				ScriptSettings.CollectAllDrops = false
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "Collect drops broken"
})
local Shaders = COB("Render", {
	["Name"] = "Shaders",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				print("shaders enabled")
				game:GetService("Lighting"):ClearAllChildren()
				local Bloom = Instance.new("BloomEffect")
				Bloom.Intensity = 0.1
				Bloom.Threshold = 0
				Bloom.Size = 100

				local Tropic = Instance.new("Sky")
				Tropic.Name = "Tropic"
				Tropic.SkyboxUp = "http://www.roblox.com/asset/?id=169210149"
				Tropic.SkyboxLf = "http://www.roblox.com/asset/?id=169210133"
				Tropic.SkyboxBk = "http://www.roblox.com/asset/?id=169210090"
				Tropic.SkyboxFt = "http://www.roblox.com/asset/?id=169210121"
				Tropic.StarCount = 100
				Tropic.SkyboxDn = "http://www.roblox.com/asset/?id=169210108"
				Tropic.SkyboxRt = "http://www.roblox.com/asset/?id=169210143"
				Tropic.Parent = Bloom

				local Sky = Instance.new("Sky")
				Sky.SkyboxUp = "http://www.roblox.com/asset/?id=196263782"
				Sky.SkyboxLf = "http://www.roblox.com/asset/?id=196263721"
				Sky.SkyboxBk = "http://www.roblox.com/asset/?id=196263721"
				Sky.SkyboxFt = "http://www.roblox.com/asset/?id=196263721"
				Sky.CelestialBodiesShown = false
				Sky.SkyboxDn = "http://www.roblox.com/asset/?id=196263643"
				Sky.SkyboxRt = "http://www.roblox.com/asset/?id=196263721"
				Sky.Parent = Bloom

				Bloom.Parent = game:GetService("Lighting")

				local Bloom = Instance.new("BloomEffect")
				Bloom.Enabled = false
				Bloom.Intensity = 0.35
				Bloom.Threshold = 0.2
				Bloom.Size = 56

				local Tropic = Instance.new("Sky")
				Tropic.Name = "Tropic"
				Tropic.SkyboxUp = "http://www.roblox.com/asset/?id=169210149"
				Tropic.SkyboxLf = "http://www.roblox.com/asset/?id=169210133"
				Tropic.SkyboxBk = "http://www.roblox.com/asset/?id=169210090"
				Tropic.SkyboxFt = "http://www.roblox.com/asset/?id=169210121"
				Tropic.StarCount = 100
				Tropic.SkyboxDn = "http://www.roblox.com/asset/?id=169210108"
				Tropic.SkyboxRt = "http://www.roblox.com/asset/?id=169210143"
				Tropic.Parent = Bloom

				local Sky = Instance.new("Sky")
				Sky.SkyboxUp = "http://www.roblox.com/asset/?id=196263782"
				Sky.SkyboxLf = "http://www.roblox.com/asset/?id=196263721"
				Sky.SkyboxBk = "http://www.roblox.com/asset/?id=196263721"
				Sky.SkyboxFt = "http://www.roblox.com/asset/?id=196263721"
				Sky.CelestialBodiesShown = false
				Sky.SkyboxDn = "http://www.roblox.com/asset/?id=196263643"
				Sky.SkyboxRt = "http://www.roblox.com/asset/?id=196263721"
				Sky.Parent = Bloom

				Bloom.Parent = game:GetService("Lighting")
				local Blur = Instance.new("BlurEffect")
				Blur.Size = 2

				Blur.Parent = game:GetService("Lighting")
				local Efecto = Instance.new("BlurEffect")
				Efecto.Name = "Efecto"
				Efecto.Enabled = false
				Efecto.Size = 2

				Efecto.Parent = game:GetService("Lighting")
				local Inaritaisha = Instance.new("ColorCorrectionEffect")
				Inaritaisha.Name = "Inari taisha"
				Inaritaisha.Saturation = 0.05
				Inaritaisha.TintColor = Color3.fromRGB(255, 224, 219)

				Inaritaisha.Parent = game:GetService("Lighting")
				local Normal = Instance.new("ColorCorrectionEffect")
				Normal.Name = "Normal"
				Normal.Enabled = false
				Normal.Saturation = -0.2
				Normal.TintColor = Color3.fromRGB(255, 232, 215)

				Normal.Parent = game:GetService("Lighting")
				local SunRays = Instance.new("SunRaysEffect")
				SunRays.Intensity = 0.05

				SunRays.Parent = game:GetService("Lighting")
				local Sunset = Instance.new("Sky")
				Sunset.Name = "Sunset"
				Sunset.SkyboxUp = "rbxassetid://323493360"
				Sunset.SkyboxLf = "rbxassetid://323494252"
				Sunset.SkyboxBk = "rbxassetid://323494035"
				Sunset.SkyboxFt = "rbxassetid://323494130"
				Sunset.SkyboxDn = "rbxassetid://323494368"
				Sunset.SunAngularSize = 14
				Sunset.SkyboxRt = "rbxassetid://323494067"

				Sunset.Parent = game:GetService("Lighting")
				local Takayama = Instance.new("ColorCorrectionEffect")
				Takayama.Name = "Takayama"
				Takayama.Enabled = false
				Takayama.Saturation = -0.3
				Takayama.Contrast = 0.1
				Takayama.TintColor = Color3.fromRGB(235, 214, 204)

				Takayama.Parent = game:GetService("Lighting")
				local L = game:GetService("Lighting")
				L.Brightness = 2.14
				L.ColorShift_Bottom = Color3.fromRGB(11, 0, 20)
				L.ColorShift_Top = Color3.fromRGB(240, 127, 14)
				L.OutdoorAmbient = Color3.fromRGB(34, 0, 49)
				L.ClockTime = 6.7
				L.FogColor = Color3.fromRGB(94, 76, 106)
				L.FogEnd = 1000
				L.FogStart = 0
				L.ExposureCompensation = 0.24
				L.ShadowSoftness = 0
				L.Ambient = Color3.fromRGB(59, 33, 27)

				local Bloom = Instance.new("BloomEffect")
				Bloom.Intensity = 0.1
				Bloom.Threshold = 0
				Bloom.Size = 100

				local Tropic = Instance.new("Sky")
				Tropic.Name = "Tropic"
				Tropic.SkyboxUp = "http://www.roblox.com/asset/?id=169210149"
				Tropic.SkyboxLf = "http://www.roblox.com/asset/?id=169210133"
				Tropic.SkyboxBk = "http://www.roblox.com/asset/?id=169210090"
				Tropic.SkyboxFt = "http://www.roblox.com/asset/?id=169210121"
				Tropic.StarCount = 100
				Tropic.SkyboxDn = "http://www.roblox.com/asset/?id=169210108"
				Tropic.SkyboxRt = "http://www.roblox.com/asset/?id=169210143"
				Tropic.Parent = Bloom

				local Sky = Instance.new("Sky")
				Sky.SkyboxUp = "http://www.roblox.com/asset/?id=196263782"
				Sky.SkyboxLf = "http://www.roblox.com/asset/?id=196263721"
				Sky.SkyboxBk = "http://www.roblox.com/asset/?id=196263721"
				Sky.SkyboxFt = "http://www.roblox.com/asset/?id=196263721"
				Sky.CelestialBodiesShown = false
				Sky.SkyboxDn = "http://www.roblox.com/asset/?id=196263643"
				Sky.SkyboxRt = "http://www.roblox.com/asset/?id=196263721"
				Sky.Parent = Bloom

				Bloom.Parent = game:GetService("Lighting")

				local Bloom = Instance.new("BloomEffect")
				Bloom.Enabled = false
				Bloom.Intensity = 0.35
				Bloom.Threshold = 0.2
				Bloom.Size = 56

				local Tropic = Instance.new("Sky")
				Tropic.Name = "Tropic"
				Tropic.SkyboxUp = "http://www.roblox.com/asset/?id=169210149"
				Tropic.SkyboxLf = "http://www.roblox.com/asset/?id=169210133"
				Tropic.SkyboxBk = "http://www.roblox.com/asset/?id=169210090"
				Tropic.SkyboxFt = "http://www.roblox.com/asset/?id=169210121"
				Tropic.StarCount = 100
				Tropic.SkyboxDn = "http://www.roblox.com/asset/?id=169210108"
				Tropic.SkyboxRt = "http://www.roblox.com/asset/?id=169210143"
				Tropic.Parent = Bloom

				local Sky = Instance.new("Sky")
				Sky.SkyboxUp = "http://www.roblox.com/asset/?id=196263782"
				Sky.SkyboxLf = "http://www.roblox.com/asset/?id=196263721"
				Sky.SkyboxBk = "http://www.roblox.com/asset/?id=196263721"
				Sky.SkyboxFt = "http://www.roblox.com/asset/?id=196263721"
				Sky.CelestialBodiesShown = false
				Sky.SkyboxDn = "http://www.roblox.com/asset/?id=196263643"
				Sky.SkyboxRt = "http://www.roblox.com/asset/?id=196263721"
				Sky.Parent = Bloom

				Bloom.Parent = game:GetService("Lighting")
				local Blur = Instance.new("BlurEffect")
				Blur.Size = 2

				Blur.Parent = game:GetService("Lighting")
				local Efecto = Instance.new("BlurEffect")
				Efecto.Name = "Efecto"
				Efecto.Enabled = false
				Efecto.Size = 4

				Efecto.Parent = game:GetService("Lighting")
				local Inaritaisha = Instance.new("ColorCorrectionEffect")
				Inaritaisha.Name = "Inari taisha"
				Inaritaisha.Saturation = 0.05
				Inaritaisha.TintColor = Color3.fromRGB(255, 224, 219)

				Inaritaisha.Parent = game:GetService("Lighting")
				local Normal = Instance.new("ColorCorrectionEffect")
				Normal.Name = "Normal"
				Normal.Enabled = false
				Normal.Saturation = -0.2
				Normal.TintColor = Color3.fromRGB(255, 232, 215)

				Normal.Parent = game:GetService("Lighting")
				local SunRays = Instance.new("SunRaysEffect")
				SunRays.Intensity = 0.05

				SunRays.Parent = game:GetService("Lighting")
				local Sunset = Instance.new("Sky")
				Sunset.Name = "Sunset"
				Sunset.SkyboxUp = "rbxassetid://323493360"
				Sunset.SkyboxLf = "rbxassetid://323494252"
				Sunset.SkyboxBk = "rbxassetid://323494035"
				Sunset.SkyboxFt = "rbxassetid://323494130"
				Sunset.SkyboxDn = "rbxassetid://323494368"
				Sunset.SunAngularSize = 14
				Sunset.SkyboxRt = "rbxassetid://323494067"

				Sunset.Parent = game:GetService("Lighting")
				local Takayama = Instance.new("ColorCorrectionEffect")
				Takayama.Name = "Takayama"
				Takayama.Enabled = false
				Takayama.Saturation = -0.3
				Takayama.Contrast = 0.1
				Takayama.TintColor = Color3.fromRGB(235, 214, 204)

				Takayama.Parent = game:GetService("Lighting")
				local L = game:GetService("Lighting")
				L.Brightness = 2.3
				L.ColorShift_Bottom = Color3.fromRGB(11, 0, 20)
				L.ColorShift_Top = Color3.fromRGB(240, 127, 14)
				L.OutdoorAmbient = Color3.fromRGB(34, 0, 49)
				L.TimeOfDay = "07:30:00"
				L.FogColor = Color3.fromRGB(94, 76, 106)
				L.FogEnd = 300
				L.FogStart = 0
				L.ExposureCompensation = 0.24
				L.ShadowSoftness = 0
				L.Ambient = Color3.fromRGB(59, 33, 27)
			end)
		else
			pcall(function()
				print("shaders disabled")
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "Cool shader"
})
local HostCrasher = COB("Utility", {
	["Name"] = "HostCrasher",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.HostCrasher = true
				for i,plr in pairs(game:GetService("Players"):GetChildren()) do
                    local args = {
                        [1] = "",
                        [2] = {
                            [1] = {
                                ["userId"] = plr.UserId,
                                ["name"] = plr.Name,
                                ["displayName"] = plr.DisplayName
                            }
                        }
                    }
                    game:GetService("ReplicatedStorage").rbxts_include.node_modules.net.out._NetManaged:FindFirstChild("CustomMatches:CohostPlayer"):FireServer(unpack(args))
				end
				while task.wait() do
				    if not ScriptSettings.HostCrasher == true then return end
				    for i,plr in pairs(game:GetService("Players"):GetChildren()) do
                        local args = {
                            [1] = "",
                            [2] = {
                                [1] = {
                                    ["userId"] = plr.UserId,
                                    ["name"] = plr.Name,
                                    ["displayName"] = plr.DisplayName
                                },
                                [2] = math.random(1,999999999)
                            }
                        }
                        game:GetService("ReplicatedStorage").rbxts_include.node_modules.net.out._NetManaged:FindFirstChild("CustomMatches:SetPlayerMaxHealth"):FireServer(unpack(args))
				    end
				end
			end)
		else
			pcall(function()
				ScriptSettings.HostCrasher = false
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "Requires you to be host to let it work"
})
local Crosshair = COB("Render", {
	["Name"] = "Crosshair",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.Crosshair = true
				local mouse = game:GetService("Players").LocalPlayer:GetMouse()
				mouse.Icon = "rbxassetid://9943168532"
				mouse:GetPropertyChangedSignal("Icon"):Connect(function()
				    if not ScriptSettings.Crosshair == true then return end
				    mouse.Icon = "rbxassetid://9943168532"
				end)
			end)
		else
			pcall(function()
				ScriptSettings.Crosshair = false
				local mouse = game:GetService("Players").LocalPlayer:GetMouse()
				mouse.Icon = ""
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "Custom crosshair"
})
local Reinject = COB("Utility", {
	["Name"] = "Reinject",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.Reinject = true
				infonotify("Reinject", "Please disable reinject to use.", 5)
			end)
		else
			pcall(function()
				ScriptSettings.Reinject = false
				GuiLibrary["SelfDestruct"]()
				if shared.DogV4Private_AutoExec then shared.Restart_Vape() else infonotify("Reinject", "You do not have Dog V4 Reinject supported.", "5") end
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "Reinjects vape"
})
local Night = COB("Render", {
	["Name"] = "Night",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.Night = true
				game:GetService("Lighting").TimeOfDay = "00:00:00"
				while task.wait(5) do
					if not ScriptSettings.Night == true then return end
					game:GetService("Lighting").TimeOfDay = "00:00:00"
				end
			end)
		else
			pcall(function()
				ScriptSettings.Night = false
				game:GetService("Lighting").TimeOfDay = "13:00:00"
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "Cool night render"
})
local ChatCrasher = COB("Utility", {
	["Name"] = "ChatCrasher",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.ChatCrasher = true
				while task.wait() do
					if not ScriptSettings.ChatCrasher == true then return end
					game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼᲼", "All")
				end
			end)
		else
			pcall(function()
				ScriptSettings.ChatCrasher = false
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "cool"
})
local AntiAFK = COB("Render", {
	["Name"] = "AntiAFK",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.AntiAFK = true
				local cons = getconnections or get_signal_cons
				if cons then
					for i,v in pairs(cons(game:GetService("Players").LocalPlayer.Idled)) do
						if ScriptSettings.AntiAFK == true then
							v:Disable()
							v:Disconnect()
						end
					end
				end
				assert(firesignal, "Asserted FireSignal")
				local uis = game:GetService("UserInputService")
				local runs = game:GetService("RUnService")
				uis.WindowFocusReleased:Connect(function()
					if ScriptSettings.AntiAFK == true then
						runs.Stepped:Wait()
						pcall(firesignal, uis.WindowFocused)
					end
				end)
			end)
		else
			pcall(function()
				ScriptSettings.AntiAFK = false
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "No more AFK kicks, wow, another untoggable module i made toggable"
})
local CustomAntivoid = COB("Utility", {
	["Name"] = "CustomAntivoid",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.CustomAntivoid = true
				--repeat task.wait(0.3) until getstate() == 1
				local part = Instance.new("Part")
				part.Name = "AVOID_PART"
				part.Anchored = true
				part.Color = Color3.fromRGB(255,65,65)
				part.Size = Vector3.new(5000,3,5000)
				part.Parent = game:GetService("Workspace")
				part.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame - Vector3.new(0,20,0)
				ScriptSettings.CustomAntivoid_Part = part
				part.Touched:Connect(function(v)
					if v.Parent:FindFirstChild("Humanoid") and v.Parent.Parent.Name == game:GetService("Players").LocalPlayer.Name and not v.Parent:FindFirstChild("Humanoid").Health == 0 then
						game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
						task.wait(0.12)
						game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
						task.wait(0.12)
						game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
						task.wait(0.12)
						game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
						--[[
							local tptimes = 0
							repeat
								task.wait()
								tptimes = tptimes + 1
								game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame / 2
							until tptimes = 10
						]]--
					end
				end)
			end)
		else
			pcall(function()
				ScriptSettings.CustomAntivoid = false
				ScriptSettings.CustomAntivoid_Part:Destroy()
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "custom anti void (broken on beach map)"
})
local RagdollDisabler = COB("Utility", {
	["Name"]  = "RagdollDisabler",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.RagdollDisabler = true
				while task.wait(0.1) do
					if not ScriptSettings.RagdollDisabler == true then return end
					game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Ragdoll)
					task.wait(0.085)
					game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Running)
				end
			end)
		else
			pcall(function()
				ScriptSettings.RagdollDisabler = false
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "Makes you ragdoll to bypass anticheat"
})
local LandmindeAura = COB("Blatant", {
	["Name"]  = "LandmindeAura",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.LandmindeAura = true
				while task.wait(0.15) do
					if not ScriptSettings.LandmindeAura == true then return end
					for i,v in pairs(game:GetService("Players"):GetChildren()) do
						if not v.Name == game:GetService("Players").LocalPlayer.Name then
							local mag = (v.Character:FindFirstChild("HumanoidRootPart").Position - game:GetService("Players").LocalPlayer.Character:FindFirstChild("Humanoid").Position).magnitude
							if mag > 11 then
								if not v.Team.BrickColor == game:GetService("Players").LocalPlayer.Team.BrickColor then
									if not v.Team.Name == game:GetService("Players").LocalPlayer.Team.Name then
										game:GetService("ReplicatedStorage").rbxts_include.node_modules.net.out._NetManaged["landmineremote"]:FireServer({
											["invisibleLandmine"] = v.Character:FindFirstChild("Head")
										})
									end
								end
							end
						end
					end
				end
			end)
		else
			pcall(function()
				ScriptSettings.LandmindeAura = false
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "(Actually) a dumb aura i made"
})
local BiMode_Blur 
local BiMode = COB("Render", {
	["Name"]  = "BiMode",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.BiMode = true
				game:GetService("Lighting").Ambient = Color3.fromRGB(130, 12, 110)
				game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(130, 12, 110)
				game:GetService("Lighting").ColorShift_Bottom = Color3.fromRGB(130, 12, 110)
				game:GetService("Lighting").ColorShift_Top = Color3.fromRGB(130, 12, 110)
				game:GetService("Lighting").TimeOfDay = "03:00:00"
				game:GetService("Lighting").FogColor = Color3.fromRGB(130, 12, 110)
				game:GetService("Lighting").FogStart = 500
				game:GetService("Lighting").FogEnd = 100000
				game:GetService("Lighting").ExposureCompensation = 1
				BiMode_Blur = Instance.new("Blur")
				local blurx = BiMode_Blur
				blurx.Size = 4
				blurx.Name = game:GetService("HttpService"):GenerateGUID(true)
			end)
		else
			pcall(function()
				ScriptSettings.BiMode = false
				game:GetService("Lighting").Ambient = Color3.fromRGB(165, 165, 165)
				game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(104, 104, 104)
				game:GetService("Lighting").ColorShift_Bottom = Color3.fromRGB(146, 190, 255)
				game:GetService("Lighting").ColorShift_Top = Color3.fromRGB(228, 249, 255)
				game:GetService("Lighting").TimeOfDay = "13:00:00"
				game:GetService("Lighting").FogColor = Color3.fromRGB(255, 255, 255)
				game:GetService("Lighting").FogStart = 0
				game:GetService("Lighting").FogEnd = 100000
				game:GetService("Lighting").ExposureCompensation = 0
				if BiMode_Blur then BiMode_Blur:Destroy() end
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "ok"
})
local SlowAutoWin = COB("Utility", {
	["Name"]  = "SlowAutoWin broken?",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.SlowAutoWin = true
				local char = game:GetService("Players").LocalPlayer.Character
				char:FindFirstChild("HumanoidRootPart").CFrame = char:FindFirstChild("HumanoidRootPart").CFrame + Vector3.new(0,99,0)
				char:FindFirstChild("Head").Anchored = true
				char:FindFirstChild("UpperTorso").Anchored = true
				char:FindFirstChild("UpperTorso").Anchored = true
				char:FindFirstChild("HumanoidRootPart"):Destroy()
			end)
		else
			pcall(function()
				ScriptSettings.SlowAutoWin = false
				infonotify("SlowAutoWin", "Unable to revert changes", "5")
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "advanced hrp destroyer broken?"
})
local InviteCrash = COB("Utility", {
	["Name"] = "InviteCrash",
	["Function"] = function(callback)
		if callback then
			pcall(function()
				ScriptSettings.InviteCrash = true
				while task.wait() do
					if not ScriptSettings.InviteCrash == true then return end
					for i,v in pairs(game:GetService("Players"):GetChildren()) do
						if not v.Name == game:GetService("Players").LocalPlayer.Name then
							game:GetService("ReplicatedStorage")["events-@easy-games/lobby:shared/event/lobby-events@getEvents.Events"].inviteToParty:FireServer({["player"] = game:GetService("Players")[v.Name],})
						end
					end
				end
			end)
		else
			pcall(function()
				ScriptSettings.InviteCrash = false
			end)
		end
	end,
	["Default"] = false,
	["HoverText"] = "Spam invites other players"
})


runFunction(function()
	local ProjectileAura = {Enabled = false}
	local ProjectileAuraRange = {Value = 40}
	local projectileRemote = bedwars.ClientHandler:Get(bedwars.ProjectileRemote)
	local lastTarget
	local fireDelays = {}

	local function shootProjectile(item, ammotypething)
		local plr = EntityNearPosition(ProjectileAuraRange.Value)
		lastTarget = plr
		if plr then 
			if plr.Character:GetAttribute("InfernalShieldRaised") then return end
			local rayparams = RaycastParams.new()
			local tab = {lplr.Character}
			for i,v in pairs(entityLibrary.entityList) do if v.Targetable then table.insert(tab, v.Character) end end
			rayparams.FilterDescendantsInstances = tab
			local rayCheckPos = CFrame.new(entityLibrary.character.HumanoidRootPart.Position, plr.RootPart.Position)
			if bedwars.QueryUtil:raycast(rayCheckPos.p, plr.RootPart.Position - rayCheckPos.p, rayparams) then return end
			local plrtype, plrattackable = WhitelistFunctions:CheckPlayerType(plr.Player)
			if not plrattackable then return end
			local projsource = bedwars.ItemTable[item.itemType].projectileSource
			local ammo = projsource.projectileType(ammotypething)	
			local projmeta = bedwars.ProjectileMeta[ammo]
			local startPos = entityLibrary.character.HumanoidRootPart.Position
			local offsetStartPos = startPos + Vector3.new(0, 2, 0)
			local prediction = (worldmeta and projmeta.predictionLifetimeSec or projmeta.lifetimeSec or 3)
			local launchvelo = (projmeta.launchVelocity or 100)
			local gravity = (projmeta.gravitationalAcceleration or 196.2)
			local multigrav = gravity
			local pos = plr.RootPart.Position
			local playergrav = workspace.Gravity
			local balloons = plr.Character:GetAttribute("InflatedBalloons")
			if balloons and balloons > 0 then 
				playergrav = (workspace.Gravity * (1 - ((balloons >= 4 and 1.2 or balloons >= 3 and 1 or 0.975))))
			end
			if plr.Character.PrimaryPart:FindFirstChild("rbxassetid://8200754399") then 
				playergrav = (workspace.Gravity * 0.3)
			end
			local shootpos, shootvelo = predictGravity(pos, plr.RootPart.Velocity, (pos - offsetStartPos).Magnitude / launchvelo, plr, playergrav)
			if projmeta.projectile == "telepearl" then
				shootpos = pos
				shootvelo = Vector3.zero
			end
			local newlook = CFrame.new(offsetStartPos, shootpos) * CFrame.new(Vector3.new(-bedwars.BowConstantsTable.RelX, -bedwars.BowConstantsTable.RelY, -bedwars.BowConstantsTable.RelZ))
			shootpos = newlook.p + (newlook.lookVector * (offsetStartPos - shootpos).magnitude)
			local calculated = LaunchDirection(offsetStartPos, shootpos, launchvelo, multigrav, false)
			if calculated then 
				local guid = game:GetService("HttpService"):GenerateGUID()
				bedwars.ProjectileController:createLocalProjectile(tab, ammotypething, ammo, offsetStartPos, guid, calculated, {drawDurationSeconds = 1})
				projectileRemote:CallServerAsync(item.tool, ammotypething, ammo, offsetStartPos, startPos, calculated, guid, {drawDurationSeconds = 1}, workspace:GetServerTimeNow() - 0.045)
				task.wait(projsource.fireDelaySec)
			end
		end
	end

	ProjectileAura = GuiLibrary.ObjectsThatCanBeSaved.BlatantWindow.Api.CreateOptionsButton({
        Name = "ProjectileAura",
        Function = function(callback)
			if callback then 
				task.spawn(function()
					repeat
						task.wait()
						if GuiLibrary.ObjectsThatCanBeSaved["Lobby CheckToggle"].Api.Enabled then 
							if bedwarsStore.matchState == 0 then continue end
						end
						if entityLibrary.isAlive then
							if getItem("arrow") then
								for slot, item in pairs(bedwarsStore.localInventory.inventory.items) do
									if item.itemType:find("bow") then 
										if fireDelays[item.itemType] == nil or fireDelays[item.itemType] < tick() then
											task.spawn(shootProjectile, item, "arrow")
											fireDelays[item.itemType] = tick() + bedwars.ItemTable[item.itemType].projectileSource.fireDelaySec
										end
									end
								end
							end
						else
							lastTarget = nil
						end
					until (not ProjectileAura.Enabled)
				end)
				task.spawn(function()
					repeat
						task.wait()
						if GuiLibrary.ObjectsThatCanBeSaved["Lobby CheckToggle"].Api.Enabled then 
							if bedwarsStore.matchState == 0 then continue end
						end
						if entityLibrary.isAlive then
							local snowball = getItem("snowball")
							if snowball then 
								shootProjectile(snowball, "snowball")
							else
								lastTarget = nil
							end
						else
							lastTarget = nil
						end
					until (not ProjectileAura.Enabled)
				end)
				task.spawn(function()
					repeat
						vapeTargetInfo.Targets.ProjectileAura = lastTarget and {
							Humanoid = {
								Health = (lastTarget.Character:GetAttribute("Health") or lastTarget.Humanoid.Health) + getShieldAttribute(lastTarget.Character),
								MaxHealth = lastTarget.Character:GetAttribute("MaxHealth") or lastTarget.Humanoid.MaxHealth
							},
							Player = lastTarget.Player
						}
						task.wait()
					until (not ProjectileAura.Enabled)
				end)
			else
				vapeTargetInfo.Targets.ProjectileAura = nil
			end
		end
	})
	ProjectileAuraRange = ProjectileAura.CreateSlider({
		Name = "Range",
		Function = function() end,
		Min = 1,
		Max = 50,
		Default = 50
	})
end)

       runcode(function()
            local funnyfly = {["Enabled"] = false}
            local flyacprogressbar
            local flyacprogressbarframe
            local flyacprogressbarframe2
            local flyacprogressbartext
            local bodyvelo
            funnyfly = GuiLibrary["ObjectsThatCanBeSaved"]["BlatantWindow"]["Api"].CreateOptionsButton({
                ["Name"] = "FunnyFlyV2",
                ["Function"] = function(callback)
                    if callback then 
                        local starty
                        local starttick = tick()
                        task.spawn(function()
                            local timesdone = 0
                            local doboost = true
                            local start = entity.character.HumanoidRootPart.Position
                            flyacprogressbartext = Instance.new("TextLabel")
                            flyacprogressbartext.Text = "Unsafe"
                            flyacprogressbartext.Font = Enum.Font.Gotham
                            flyacprogressbartext.TextStrokeTransparency = 0
                            flyacprogressbartext.TextColor3 =  Color3.new(0.9, 0.9, 0.9)
                            flyacprogressbartext.TextSize = 20
                            flyacprogressbartext.Size = UDim2.new(0, 0, 0, 20)
                            flyacprogressbartext.BackgroundTransparency = 1
                            flyacprogressbartext.Position = UDim2.new(0.5, 0, 0.5, 40)
                            flyacprogressbartext.Parent = GuiLibrary["MainGui"]
                            repeat
                                timesdone = timesdone + 1
                                if entity.isAlive then
                                    local root = entity.character.HumanoidRootPart
                                    if starty == nil then 
                                        starty = root.Position.Y
                                    end
                                    if not bodyvelo then 
                                        bodyvelo = Instance.new("BodyVelocity")
                                        bodyvelo.MaxForce = Vector3.new(0, 1000000, 0)
                                        bodyvelo.Parent = root
                                        bodyvelo.Velocity = Vector3.zero
                                    else
                                        bodyvelo.Parent = root
                                    end
                                    for i = 2, 30, 2 do 
                                        task.wait(0.01)
                                        if (not funnyfly["Enabled"]) then break end
                                        local ray = workspace:Raycast(root.Position + (entity.character.Humanoid.MoveDirection * 50), Vector3.new(0, -2000, 0), blockraycast)
                                        flyacprogressbartext.Text = ray and "Safe" or "Unsafe"
                                        bodyvelo.Velocity = Vector3.new(0, 25 + i, 0)
                                    end
                                    if (not networkownerfunc(root)) then
                                        break 
                                    end
                                else
                                    break
                                end
                            until (not funnyfly["Enabled"])
                            if funnyfly["Enabled"] then 
                                funnyfly["ToggleButton"](false)
                            end
                        end)
                    else
                        if bodyvelo then 
                            bodyvelo:Destroy()
                            bodyvelo = nil
                        end
                        if flyacprogressbartext then
                            flyacprogressbartext:Destroy()
                        end
                    end
                end
            })
        end)

	 runcode(function()
		local TPMiddle = {["Enabled"] = false}
		TPMiddle = GuiLibrary["ObjectsThatCanBeSaved"]["UtilityWindow"]["Api"].CreateOptionsButton({
			["Name"] = "SkywarsMiddle",
			["HoverText"] = "Teleports You To The Middle In Skywars (no game check )",
			["Function"] = function(callback)
				if callback then
					local TPMiddleCONNECT = game:GetService("ReplicatedStorage").rbxts_include.node_modules["@rbxts"].net.out._NetManaged.MatchStateEvent.OnClientEvent:Connect(function()
						game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Workspace").SpectatorPlatform:FindFirstChild("floor").CFrame - Vector3.new(0,15,0)
						task.wait(.2)
						game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Workspace").SpectatorPlatform:FindFirstChild("floor").CFrame - Vector3.new(0,15,0)
					end)
				else
					TPMiddleCONNECT:Disconnect()
				end
			end
		})
	
	end)


runFunction(function()
	local workspace = game:GetService("Workspace")
	local inffly = {Enabled = false}
	inffly = GuiLibrary.ObjectsThatCanBeSaved.BlatantWindow.Api.CreateOptionsButton({
		Name = "SlowFlight",
		Callback = function(callback)
			if callback then
				lplr.Character.Archivable = true
				local clonethingy = lplr.Character:Clone()
				clonethingy.Name = "clonethingy"
				clonethingy:FindFirstChild("HumanoidRootPart").Transparency = 1
				clonethingy.Parent = workspace
				workspace.Camera.CameraSubject = clonethingy.Humanoid
				partthingy = Instance.new("Part", workspace)
				partthingy.Size = Vector3.new(2048, 1, 2048)
				partthingy.CFrame = clonethingy.HumanoidRootPart.CFrame * CFrame.new(0, -4, 0)
				partthingy.Anchored = true
				partthingy.Transparency = 1
				partthingy.Name = "partthingy"
				RunLoops:BindToHeartbeat("BoostSilentFly", 1, function(delta)
					clonethingy.HumanoidRootPart.CFrame = CFrame.new(entity.character.HumanoidRootPart.CFrame.X, clonethingy.HumanoidRootPart.CFrame.Y, entity.character.HumanoidRootPart.CFrame.Z)
					clonethingy.HumanoidRootPart.Rotation = entity.character.HumanoidRootPart.Rotation
				end)
				task.spawn(function()
					repeat
						task.wait(0.1)
						if inffly.Enabled == false then break end
						entity.character.HumanoidRootPart.Velocity = entity.character.HumanoidRootPart.Velocity + Vector3.new(0, 35, 0)
					until inffly.Enabled == false
				end)
				repeat
					task.wait(0.001)
					if inffly.Enabled == false then break end
					clonethingy.HumanoidRootPart.CFrame = CFrame.new(entity.character.HumanoidRootPart.CFrame.X, clonethingy.HumanoidRootPart.CFrame.Y, entity.character.HumanoidRootPart.CFrame.Z)
				until testing == true
			else
				if workspace:FindFirstChild("clonethingy") or workspace:FindFirstChild("partthingy") then
					workspace:FindFirstChild("clonethingy"):Destroy()
					workspace:FindFirstChild("partthingy"):Destroy()
					RunLoops:UnbindFromHeartbeat("BoostSilentFly")
					testing = true
					workspace.Camera.CameraSubject = lplr.Character.Humanoid
				end
			end
		end,
		HoverText = "No Lagbacks, max 20 seconds"
	})
end)

runFunction(function()
	local bluthooth = {Enabled = false}
bluthooth = GuiLibrary.ObjectsThatCanBeSaved.WorldWindow.Api.CreateOptionsButton({
		Name = "Ze Bluthooth Device",
		Function = function(callback)
			if callback then
				vapecapeconnection = lplr.CharacterAdded:Connect(function(char)
					task.spawn(function()
						pcall(function()
							Cape(char, getcustomassetfunc("vape/assets/VapeCape.webm"))
						end)
					end)
				end)
				if lplr.Character then
					task.spawn(function()
						pcall(function()
							Cape(lplr.Character, getcustomassetfunc("vape/assets/VapeCape.webm"))
						end)
					end)
				end
			else
				if vapecapeconnection then
					vapecapeconnection:Disconnect()
				end
				if lplr.Character then
					for i, v in pairs(lplr.Character:GetDescendants()) do
						if v.Name == "Cape" then
							v:Remove()
						end
					end
				end
			end
		end
	})
end)



